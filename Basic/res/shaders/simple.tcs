#version 430 core

//uniforms
uniform float tessLevel;
//output patch size
layout(vertices = 3) out;
 
void main(void)
{
 gl_TessLevelOuter[0] = tessLevel;
 gl_TessLevelOuter[1] = tessLevel;
 gl_TessLevelOuter[2] = tessLevel;
 //gl_TessLevelOuter[3] = 8.0; //Irrelevant for triangles
 
 gl_TessLevelInner[0] = tessLevel;
 //gl_TessLevelInner[1] = 8.0; //Irrelevant for triangles
 if(mod(gl_InvocationID, 3) == 0){
	 gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
	 gl_out[gl_InvocationID].gl_Position.x += 1.0f;
 }
  if(mod(gl_InvocationID, 3) == 1){
	 gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;
	 	 gl_out[gl_InvocationID].gl_Position.y += 1.0f;
 }
  if(mod(gl_InvocationID, 3) == 2){
	 gl_out[gl_InvocationID].gl_Position = gl_in[gl_InvocationID].gl_Position;

 }
}